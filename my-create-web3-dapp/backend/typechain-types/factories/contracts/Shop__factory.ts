/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Shop, ShopInterface } from "../../contracts/Shop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pokeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pokeNft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ratio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftPrize",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "buyNFTWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokenDigitalWithEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftPrize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pokeNft",
    outputs: [
      {
        internalType: "contract IPokeNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pokeToken",
    outputs: [
      {
        internalType: "contract IPokeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161098a38038061098a8339818101604052810190610032919061016b565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600281905550806003819055506001600481905550505050506101d2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610102826100d7565b9050919050565b610112816100f7565b811461011d57600080fd5b50565b60008151905061012f81610109565b92915050565b6000819050919050565b61014881610135565b811461015357600080fd5b50565b6000815190506101658161013f565b92915050565b60008060008060808587031215610185576101846100d2565b5b600061019387828801610120565b94505060206101a487828801610120565b93505060406101b587828801610156565b92505060606101c687828801610156565b91505092959194509250565b6107a9806101e16000396000f3fe60806040526004361061004a5760003560e01c8063421ef1b01461004f5780634268fdf51461007a5780638655ee2f146100a55780638cdb0c4a146100bc578063baae0728146100e7575b600080fd5b34801561005b57600080fd5b506100646100f1565b6040516100719190610435565b60405180910390f35b34801561008657600080fd5b5061008f610117565b60405161009c9190610471565b60405180910390f35b3480156100b157600080fd5b506100ba61013b565b005b3480156100c857600080fd5b506100d16102c7565b6040516100de91906104a5565b60405180910390f35b6100ef6102d1565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306003546040518463ffffffff1660e01b815260040161019a939291906104e1565b6020604051808303816000875af11580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd9190610555565b61021c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610213906105df565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1448194336004546040518363ffffffff1660e01b815260040161027b9291906105ff565b600060405180830381600087803b15801561029557600080fd5b505af11580156102a9573d6000803e3d6000fd5b50505050600460008154809291906102c090610657565b9190505550565b6000600354905090565b60003411610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90610711565b60405180910390fd5b6000600254346103249190610731565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016103819291906105ff565b600060405180830381600087803b15801561039b57600080fd5b505af11580156103af573d6000803e3d6000fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103fb6103f66103f1846103b6565b6103d6565b6103b6565b9050919050565b600061040d826103e0565b9050919050565b600061041f82610402565b9050919050565b61042f81610414565b82525050565b600060208201905061044a6000830184610426565b92915050565b600061045b82610402565b9050919050565b61046b81610450565b82525050565b60006020820190506104866000830184610462565b92915050565b6000819050919050565b61049f8161048c565b82525050565b60006020820190506104ba6000830184610496565b92915050565b60006104cb826103b6565b9050919050565b6104db816104c0565b82525050565b60006060820190506104f660008301866104d2565b61050360208301856104d2565b6105106040830184610496565b949350505050565b600080fd5b60008115159050919050565b6105328161051d565b811461053d57600080fd5b50565b60008151905061054f81610529565b92915050565b60006020828403121561056b5761056a610518565b5b600061057984828501610540565b91505092915050565b600082825260208201905092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006105c9601583610582565b91506105d482610593565b602082019050919050565b600060208201905081810360008301526105f8816105bc565b9050919050565b600060408201905061061460008301856104d2565b6106216020830184610496565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106628261048c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361069457610693610628565b5b600182019050919050565b7f457468657220616d6f756e74206d75737420626520677265617465722074686160008201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b60006106fb602383610582565b91506107068261069f565b604082019050919050565b6000602082019050818103600083015261072a816106ee565b9050919050565b600061073c8261048c565b91506107478361048c565b92508282026107558161048c565b9150828204841483151761076c5761076b610628565b5b509291505056fea264697066735822122088fee884a6c98201a1d8464584776e926b4f37d10ec52d77e9799235a5e4509364736f6c63430008130033";

type ShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shop__factory extends ContractFactory {
  constructor(...args: ShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _pokeToken: AddressLike,
    _pokeNft: AddressLike,
    _ratio: BigNumberish,
    _nftPrize: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _pokeToken,
      _pokeNft,
      _ratio,
      _nftPrize,
      overrides || {}
    );
  }
  override deploy(
    _pokeToken: AddressLike,
    _pokeNft: AddressLike,
    _ratio: BigNumberish,
    _nftPrize: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _pokeToken,
      _pokeNft,
      _ratio,
      _nftPrize,
      overrides || {}
    ) as Promise<
      Shop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Shop__factory {
    return super.connect(runner) as Shop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopInterface {
    return new Interface(_abi) as ShopInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Shop {
    return new Contract(address, _abi, runner) as unknown as Shop;
  }
}
