/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PokeMarketplace,
  PokeMarketplaceInterface,
} from "../../../contracts/PokeMarketplace.sol/PokeMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenDigitalAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
        ],
        internalType: "struct PokeMarketplace.NFTListing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract IPokeNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IPokeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200186638038062001866833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b6115f8806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a79123a911610071578063a79123a91461012c578063ca628c7814610148578063de74e57b14610152578063e0a41cf214610185578063f2fde38b146101a3578063fc0c546a146101bf576100a9565b8063305a67a8146100ae57806347ccca02146100ca5780634884f459146100e8578063715018a6146101045780638da5cb5b1461010e575b600080fd5b6100c860048036038101906100c39190610e53565b6101dd565b005b6100d26103a3565b6040516100df9190610eff565b60405180910390f35b61010260048036038101906100fd9190610e53565b6103c9565b005b61010c61064e565b005b610116610662565b6040516101239190610f3b565b60405180910390f35b61014660048036038101906101419190610f56565b61068b565b005b6101506109e4565b005b61016c60048036038101906101679190610e53565b610ad4565b60405161017c9493929190610fc0565b60405180910390f35b61018d610b41565b60405161019a9190611136565b60405180910390f35b6101bd60048036038101906101b89190611184565b610c25565b005b6101c7610ca8565b6040516101d491906111d2565b60405180910390f35b6000600460008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905060008160400151116102cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c29061124a565b60405180910390fd5b60006040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600015158152509050806004600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905060008160400151116104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae9061124a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33836000015184604001516040518463ffffffff1660e01b815260040161051e9392919061126a565b6020604051808303816000875af115801561053d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056191906112cd565b6105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059790611346565b60405180910390fd5b6001816060019015159081151581525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd82600001513384602001516040518463ffffffff1660e01b81526004016106189392919061126a565b600060405180830381600087803b15801561063257600080fd5b505af1158015610646573d6000803e3d6000fd5b505050505050565b610656610cce565b6106606000610d4c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016106fd9190611366565b602060405180830381865afa15801561071a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073e9190611396565b73ffffffffffffffffffffffffffffffffffffffff1614610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078b9061140f565b60405180910390fd5b600081116107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce9061147b565b60405180910390fd5b600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001600015158152509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b815260040161087292919061149b565b600060405180830381600087803b15801561088c57600080fd5b505af11580156108a0573d6000803e3d6000fd5b50505050806004600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600381908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055505050505050565b6109ec610cce565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610a32610662565b476040518363ffffffff1660e01b8152600401610a5092919061149b565b6020604051808303816000875af1158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9391906112cd565b610ad2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac990611346565b60405180910390fd5b565b60038181548110610ae457600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610c1c57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16151515158152505081526020019060010190610b65565b50505050905090565b610c2d610cce565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9390611536565b60405180910390fd5b610ca581610d4c565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cd6610e10565b73ffffffffffffffffffffffffffffffffffffffff16610cf4610662565b73ffffffffffffffffffffffffffffffffffffffff1614610d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d41906115a2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610e3081610e1d565b8114610e3b57600080fd5b50565b600081359050610e4d81610e27565b92915050565b600060208284031215610e6957610e68610e18565b5b6000610e7784828501610e3e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ec5610ec0610ebb84610e80565b610ea0565b610e80565b9050919050565b6000610ed782610eaa565b9050919050565b6000610ee982610ecc565b9050919050565b610ef981610ede565b82525050565b6000602082019050610f146000830184610ef0565b92915050565b6000610f2582610e80565b9050919050565b610f3581610f1a565b82525050565b6000602082019050610f506000830184610f2c565b92915050565b60008060408385031215610f6d57610f6c610e18565b5b6000610f7b85828601610e3e565b9250506020610f8c85828601610e3e565b9150509250929050565b610f9f81610e1d565b82525050565b60008115159050919050565b610fba81610fa5565b82525050565b6000608082019050610fd56000830187610f2c565b610fe26020830186610f96565b610fef6040830185610f96565b610ffc6060830184610fb1565b95945050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61103a81610f1a565b82525050565b61104981610e1d565b82525050565b61105881610fa5565b82525050565b6080820160008201516110746000850182611031565b5060208201516110876020850182611040565b50604082015161109a6040850182611040565b5060608201516110ad606085018261104f565b50505050565b60006110bf838361105e565b60808301905092915050565b6000602082019050919050565b60006110e382611005565b6110ed8185611010565b93506110f883611021565b8060005b8381101561112957815161111088826110b3565b975061111b836110cb565b9250506001810190506110fc565b5085935050505092915050565b6000602082019050818103600083015261115081846110d8565b905092915050565b61116181610f1a565b811461116c57600080fd5b50565b60008135905061117e81611158565b92915050565b60006020828403121561119a57611199610e18565b5b60006111a88482850161116f565b91505092915050565b60006111bc82610ecc565b9050919050565b6111cc816111b1565b82525050565b60006020820190506111e760008301846111c3565b92915050565b600082825260208201905092915050565b7f4e6f74206c697374656400000000000000000000000000000000000000000000600082015250565b6000611234600a836111ed565b915061123f826111fe565b602082019050919050565b6000602082019050818103600083015261126381611227565b9050919050565b600060608201905061127f6000830186610f2c565b61128c6020830185610f2c565b6112996040830184610f96565b949350505050565b6112aa81610fa5565b81146112b557600080fd5b50565b6000815190506112c7816112a1565b92915050565b6000602082840312156112e3576112e2610e18565b5b60006112f1848285016112b8565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006113306015836111ed565b915061133b826112fa565b602082019050919050565b6000602082019050818103600083015261135f81611323565b9050919050565b600060208201905061137b6000830184610f96565b92915050565b60008151905061139081611158565b92915050565b6000602082840312156113ac576113ab610e18565b5b60006113ba84828501611381565b91505092915050565b7f596f7520646f6e2774206f776e2074686973204e465400000000000000000000600082015250565b60006113f96016836111ed565b9150611404826113c3565b602082019050919050565b60006020820190508181036000830152611428816113ec565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b6000611465601c836111ed565b91506114708261142f565b602082019050919050565b6000602082019050818103600083015261149481611458565b9050919050565b60006040820190506114b06000830185610f2c565b6114bd6020830184610f96565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115206026836111ed565b915061152b826114c4565b604082019050919050565b6000602082019050818103600083015261154f81611513565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061158c6020836111ed565b915061159782611556565b602082019050919050565b600060208201905081810360008301526115bb8161157f565b905091905056fea2646970667358221220d8f580569cd53e4014f7e04d29ce86ba357d24a72854519a89de1db876f7e93964736f6c63430008130033";

type PokeMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PokeMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PokeMarketplace__factory extends ContractFactory {
  constructor(...args: PokeMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _nftContractAddress: AddressLike,
    _tokenDigitalAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _nftContractAddress,
      _tokenDigitalAddress,
      overrides || {}
    );
  }
  override deploy(
    _nftContractAddress: AddressLike,
    _tokenDigitalAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _nftContractAddress,
      _tokenDigitalAddress,
      overrides || {}
    ) as Promise<
      PokeMarketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PokeMarketplace__factory {
    return super.connect(runner) as PokeMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PokeMarketplaceInterface {
    return new Interface(_abi) as PokeMarketplaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PokeMarketplace {
    return new Contract(address, _abi, runner) as unknown as PokeMarketplace;
  }
}
